<Window x:Class="BindingTestApp.MainWindow2"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BindingTestApp"
        xmlns:c="clr-namespace:BindingTestApp.Converters"
        Title="MainWindow2" 
        Height="450" Width="800">
    <Window.Resources>
        <c:MultiplyTo2 x:Key="MultiplyTo2" />
    </Window.Resources>
    <Grid>
        <Ellipse Fill="Blue" Stroke="Red" StrokeThickness="5" VerticalAlignment="Top" HorizontalAlignment="Left"
                 Width="80" Height="30" Margin="295,158,0,0" RenderTransformOrigin="0.5, 0.5">
            <Ellipse.RenderTransform>
                <TransformGroup>
                    <RotateTransform Angle="30" x:Name="Rotator"/>
                    <TranslateTransform X="0" Y="0" x:Name="Shifter"/>
                </TransformGroup>
            </Ellipse.RenderTransform>
        </Ellipse>
        <Slider VerticalAlignment="Top" Margin="30,0,0,0" Name="HorizontalSlider"
                Value="{Binding X, ElementName=Shifter}" Maximum="300"></Slider>
        <Slider VerticalAlignment="Stretch" Name="VerticalSlider"
                HorizontalAlignment="Left" 
                Orientation="Vertical"
                Margin="0,30,0,30" Value="{Binding Y, ElementName=Shifter}" Maximum="200"></Slider>
        <Slider HorizontalAlignment="Right" 
                VerticalAlignment="Bottom" 
                Width="200" Value="{Binding Angle, ElementName=Rotator}" Minimum="0" Maximum="60"></Slider>
        <TextBlock Name="HorizontalValue" 
                 HorizontalAlignment="Right" VerticalAlignment="Top" 
                 Margin="10,30" Text="X"/>
        <TextBox HorizontalAlignment="Right" VerticalAlignment="Top" 
                 Margin="10,50" 
                 Text="{Binding Value, ElementName=HorizontalSlider, Converter={StaticResource MultiplyTo2}}"
                 Width="60">
            <TextBox.Visibility>
                <Binding ElementName="VisibilityX" Path="IsChecked">
                    <Binding.Converter>
                        <c:BoolToVisibility/>
                    </Binding.Converter>
                </Binding>
            </TextBox.Visibility>
        </TextBox>
        <CheckBox HorizontalAlignment="Right" VerticalAlignment="Top" 
                  Content="Visibility of X" Margin="10,80"
                  Name="VisibilityX" IsChecked="True"></CheckBox>
        <TextBlock Name="VerticalValue" 
                 HorizontalAlignment="Left" VerticalAlignment="Bottom" 
                 Margin="30,10" Text="Y"/>
        <CheckBox HorizontalAlignment="Left" VerticalAlignment="Bottom" 
                  Content="Visibility of Y" Margin="30,60"
                  Name="VisibilityY" IsChecked="True"></CheckBox>
        <TextBox HorizontalAlignment="Left" VerticalAlignment="Bottom" 
                 Width="60" Margin="30,30" Text="{Binding Value, ElementName=VerticalSlider, Converter={StaticResource MultiplyTo2}}">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="Background" Value="Yellow"/>
                    <Style.Triggers>
                        <!--<Trigger SourceName="VisibilityY" Property="IsChecked" Value="False">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </Trigger>-->
                        <DataTrigger Binding="{Binding IsChecked, ElementName=VisibilityY}" Value="false">
                            <!--<Setter Property="Visibility" Value="Hidden"/>-->
                            <Setter Property="Background" Value="DarkBlue"/>
                            <Setter Property="Foreground" Value="Red"/>
                            <Setter Property="BorderThickness" Value="4"/>
                            <Setter Property="BorderBrush" Value="Green"/>
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter Property="BorderBrush" Value="Red"/>-->
                            <!--<Setter Property="Background" Value="Brown"/>-->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="Red" Duration="0:0:0.5"
                                             Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"/>
                                        <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" 
                                                         To="5" Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.5" From="Blue"
                                             Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"/>
                                        <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" 
                                                         From="5" Duration="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
    </Grid>
</Window>
